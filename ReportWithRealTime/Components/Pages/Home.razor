@page "/"

@rendermode InteractiveServer
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components
@using ReportWithRealTime
@using ReportWithRealTime.Services
@using Shared

@inject IJSRuntime JSRuntime
@inject HubConnection Hub
@inject IJsonDataSourceUpdater JsonDataSourceUpdater
@inject NavigationManager NavigationManager

<div id="report-viewer" style="width: 100%;height: 950px"></div>

@code {
    // ReportViewer options
    BoldReportViewerOptions viewerOptions = new BoldReportViewerOptions();
    private bool _subscribed;

    // Used to render the Bold Report Viewer component in Blazor page.
    public async void RenderReportViewer()
    {
        viewerOptions.ReportName = "ProductAndCategoryStatistic";
        viewerOptions.ServiceURL = "/api/BoldReportsAPI";
        await JSRuntime.InvokeVoidAsync("BoldReports.RenderViewer", "report-viewer", viewerOptions);
    }
    // Initial rendering of Bold Report Viewer
    protected override void OnAfterRender(bool firstRender)
    {
        RenderReportViewer();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        if (!_subscribed)
        {
            Hub.On<StatisticPayload>("ReceiveAllStats", async data =>
            {
                await JsonDataSourceUpdater.UpdateDataSourceAsync(data);
                NavigationManager.NavigateTo(NavigationManager.Uri, true);
            });
            _subscribed = true;
        }

        if (Hub.State == HubConnectionState.Disconnected)
            await Hub.StartAsync();
    }

    private Task RefreshReportAsync()
    {
        return JSRuntime.InvokeVoidAsync("BoldReports.Refresh", "report-viewer", DateTimeOffset.UtcNow.ToUnixTimeMilliseconds()).AsTask();
    }
}
